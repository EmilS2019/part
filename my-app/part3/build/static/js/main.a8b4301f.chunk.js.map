{"version":3,"sources":["Note.js","services/notes.js","App.js","services/error.js","index.js"],"names":["Note","_ref","note","toggleImportance","deleteNote","label","important","react_default","a","createElement","className","content","onClick","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","Footer","style","clear","position","height","bottom","left","width","color","fontStyle","background","textAlign","Notification","message","fontSize","borderStyle","borderRadius","padding","marginBottom","margin","boxSizing","display","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","highestID","currentHighestID","forEach","App_Notification","map","src_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","delete","console","log","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","target","type","App_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a8b4301f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance, deleteNote }) => {\r\n  \r\n  const label = note.important ? 'make unimportant' : 'make important'\r\n  \r\n  return (   \r\n    <li className=\"note\">\r\n      <h2> {note.content} </h2>\r\n      <button onClick={deleteNote} className=\"btn\">delete</button>\r\n      <button onClick={toggleImportance} className=\"btn\">{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response =>{\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response =>{\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response =>{\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst deleteNote = (id) => {\r\n    const request = axios\r\n    .get(`${baseUrl}/${id}`)\r\n    return request.then(response =>{\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport default { getAll, create, update, deleteNote, baseUrl }","import React, { useState, useEffect } from 'react'\r\nimport Note from './Note.js'\r\nimport axios from 'axios'\r\nimport './index.css'\r\nimport noteService from './services/notes'\r\nimport error from './services/error'\r\n\r\n//npx json-server --port 3001 --watch db.json\r\n//npm start\r\n\r\nconst Footer = error.Footer\r\nconst Notification = error.Notification\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]) \r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState('Some error happened...') \r\n\r\n  useEffect(() =>{\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  //useEffect()\r\n\r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)  \r\n\r\n  const toggleImportanceOf = id =>{\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = {...note, important: !note.important}\r\n\r\n    noteService\r\n      .update(id, changedNote).then(returnedNote => {\r\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n    })\r\n    .catch(error => {\r\n      setErrorMessage(\r\n        `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() =>{\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n            \r\n      setNotes(notes.filter(n => n.id !== id))\r\n    })\r\n  }\r\n\r\n  const deleteNote = id =>{\r\n    noteService.deleteNote(id)        \r\n    .then(response=>{ axios.delete(`${noteService.baseUrl}/${id}`)\r\n    console.log(\"Target eliminated\")\r\n    setNotes(notes.filter(note => note.id === id ? false : true))})\r\n  }\r\n\r\n  const rows = () => notesToShow.map(note =>\r\n      <Note\r\n      key={note.id}\r\n      note={note}\r\n      toggleImportance={() => toggleImportanceOf(note.id)}\r\n      deleteNote={() => deleteNote(note.id)}\r\n      />\r\n  )\r\n\r\n  const handleNoteChange = (event) => {\r\n      setNewNote(event.target.value)\r\n  }\r\n\r\n  const highestID = () =>{\r\n    let currentHighestID = 0;\r\n    notes.forEach(note => {\r\n      if (note.id > currentHighestID) currentHighestID = note.id\r\n    })\r\n    return currentHighestID\r\n  }\r\n  let newID = highestID() + 1\r\n\r\n  const addNote = (event) => {\r\n      event.preventDefault()\r\n      \r\n      const noteObject = {\r\n          id: highestID() + 1,\r\n          content: newNote,\r\n          date: new Date().toISOString(),\r\n          important: Math.random() > 0.5,\r\n      }\r\n\r\n      noteService\r\n      .create(noteObject)\r\n      .then(returnedNote =>{\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <main>\r\n        <div className=\"contentWrap\">\r\n          <h1>Notes</h1>\r\n\r\n          <Notification message={errorMessage}/>\r\n\r\n          <ul>\r\n            {rows()}\r\n          </ul>\r\n          <form onSubmit={addNote} className=\"addNoteForm\">\r\n            <h1>Add Note</h1>\r\n            <input\r\n              value={newNote} \r\n              onChange={handleNoteChange}\r\n            />\r\n            <button type=\"submit\" className=\"btn\">save</button>\r\n\r\n          </form>\r\n        <button onClick={() => setShowAll(!showAll)} className=\"btn\">\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n                \r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default App ","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null){\r\n        return null\r\n    }\r\n\r\n    const errorStyle = {\r\n        position:'fixed',\r\n        color: 'red',\r\n        background: 'lightgrey',\r\n        fontSize: '20px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '10px',\r\n        width:'88.5%',\r\n        margin:'auto',\r\n        boxSizing: 'border-box',\r\n        display:'none',\r\n    }\r\n\r\n    return (\r\n        <div style={errorStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n  }\r\n\r\n  const Footer = () =>{\r\n    const footerStyle = {\r\n      clear:'both',\r\n      position: 'absolute',\r\n      height:'2.5rem',\r\n      bottom: '0',\r\n      left: '0',\r\n      width: '100%',\r\n      color: 'white',\r\n      fontStyle: 'italic',\r\n      background:'#333',\r\n      textAlign: 'center',\r\n    }\r\n  \r\n    return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Kattenelvis</em>\r\n    </div>)\r\n  } \r\n\r\n  export default {Notification, Footer}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'  \r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}